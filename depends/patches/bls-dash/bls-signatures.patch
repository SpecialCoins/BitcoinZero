diff --git a/CMakeLists.txt b/CMakeLists.txt
index e7b1927..e43977f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,20 +22,6 @@ set(CMAKE_MODULE_PATH
 	${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules
 )
 
-# Make sure to statically link libsodium when building wheels on ci
-if(DEFINED ENV{CIBUILDWHEEL})
-  set(sodium_USE_STATIC_LIBS TRUE)
-  message("libsodium will be statically linked because $CIBUILDWHEEL is defined.")
-endif()
-
-find_package(sodium)
-if (SODIUM_FOUND)
-  message(STATUS "Found libsodium")
-  message(STATUS "Sodium include dir = ${sodium_INCLUDE_DIR}")
-  set(BLSALLOC_SODIUM "1" CACHE STRING "")
-  include_directories(${sodium_INCLUDE_DIR})
-endif()
-
 set(STBIN TRUE)
 find_package(gmp)
 if (GMP_FOUND)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 2779a2e..1090e3f 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -16,6 +16,7 @@ FetchContent_Declare(
   relic
   GIT_REPOSITORY https://github.com/relic-toolkit/relic.git
   GIT_TAG        ${RELIC_GIT_TAG}
+  PATCH_COMMAND  find . -type f -name "*.[ch]" -exec sed -i.old -e s/bn_init/bn_make/g {} +
 )
 FetchContent_MakeAvailable(relic)
 
@@ -60,13 +61,7 @@ set(LIBRARIES_TO_COMBINE
 if (GMP_FOUND)
   list(APPEND LIBRARIES_TO_COMBINE COMMAND mkdir ${OPREFIX}gmp || true && cd ${OPREFIX}gmp &&  ${CMAKE_AR} -x ${GMP_NAME})
 endif()
-if (SODIUM_FOUND)
-  message("SODIUM_FOUND in src/CMakeLists.txt")
-  list(APPEND LIBRARIES_TO_COMBINE COMMAND mkdir ${OPREFIX}sodium || true && cd ${OPREFIX}sodium &&  ${CMAKE_AR} -x ${SODIUM_NAME})
-  target_compile_definitions(blstmp PRIVATE BLSALLOC_SODIUM=1)
-else()
-  target_compile_definitions(blstmp PRIVATE)
-endif()
+target_compile_definitions(blstmp PRIVATE)
 
 add_custom_target(combined_custom
         ${LIBRARIES_TO_COMBINE}
@@ -93,18 +88,10 @@ install(FILES ${C_LIB} DESTINATION lib)
 if (BUILD_BLS_TESTS)
   include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../contrib/catch)
   add_executable(runtest test.cpp)
-  if (SODIUM_FOUND)
-    target_link_libraries(runtest blstmp relic_s sodium)
-  else()
-    target_link_libraries(runtest blstmp relic_s)
-  endif()
+  target_link_libraries(runtest blstmp relic_s)
 endif()
 
 if (BUILD_BLS_BENCHMARKS)
   add_executable(runbench test-bench.cpp)
-  if (SODIUM_FOUND)
-    target_link_libraries(runbench blstmp relic_s sodium)
-  else()
-    target_link_libraries(runbench blstmp relic_s)
-  endif()
+  target_link_libraries(runbench blstmp relic_s)
 endif()
diff --git a/src/privatekey.cpp b/src/privatekey.cpp
index 3a9c8d6..534a879 100644
--- a/src/privatekey.cpp
+++ b/src/privatekey.cpp
@@ -258,7 +258,7 @@ void PrivateKey::AllocateKeyData()
 {
     assert(!keydata);
     keydata = Util::SecAlloc<bn_st>(1);
-    bn_init(keydata, RLC_BN_SIZE);
+    bn_make(keydata, RLC_BN_SIZE);
     bn_zero(keydata);
 }
 
diff --git a/src/threshold.cpp b/src/threshold.cpp
index 36cef18..ddf8138 100644
--- a/src/threshold.cpp
+++ b/src/threshold.cpp
@@ -6,6 +6,8 @@
 
 #include "schemes.hpp"
 
+#include <memory>
+
 static std::unique_ptr<bls::CoreMPL> pThresholdScheme(new bls::LegacySchemeMPL);
 
 /**
